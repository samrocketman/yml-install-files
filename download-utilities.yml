versions:
  crane: 0.15.2
  cyclonedx: 0.24.2
  docker-buildx: 0.10.5
  docker-compose: 2.18.1
  dumb-init: 1.2.5
  gh: 2.30.0
  gimme: 1.5.5
  gitleaks: 8.16.3
  goss: 0.3.22
  helm: 3.12.0
  jq: "1.6"
  kind: 0.19.0
  kubeconform: 0.6.1
  kubectl: 1.27.2
  kubeval: 0.16.1
  kustomize: 5.0.3
  minikube: 1.30.1
  rvm-installer: 1.29.12
  saml2aws: 2.36.8
  yq: 4.34.1


defaults: &defaults
  # dest could be /usr/local/bin in Docker builds
  dest: ./scratch
  perm: '0755'
  checksum_file: checksums/$(uname)-$(arch).sha256
  os:
    Linux: linux
    Darwin: darwin
  arch:
    x86_64: amd64
    aarch64: arm64
  pre_command: |
    if [ "${checksum_failed:-true}" = true ]; then
      rm -f ${dest}/${utility}
    fi
  # Universal update; see gimme utility where update is overridden
  update: |
    case "${download}" in
      https://github.com/*)
        owner="$(awk -F/ '{print $4"/"$5}' <<< "${download}")"
        export download=https://github.com/"${owner}"/releases/latest
        eval "${default_download_head}" |
        awk '$1 ~ /[Ll]ocation:/ { gsub(".*/[^0-9.]*", "", $0); print;exit}'
        ;;
      https://dl.k8s.io/release*)
        download=https://dl.k8s.io/release/stable.txt
        extract=cat
        export download extract
        eval "${default_download_extract}" |
        awk '{gsub("v", "", $0); print}'
        ;;
      https://get.helm.sh/*)
        export download=https://github.com/helm/helm/releases/latest
        eval "${default_download_head}" |
        awk '$1 ~ /[Ll]ocation:/ { gsub(".*/[^0-9.]*", "", $0); print;exit}'
        ;;
    esac
  # owner: someuser is also available
  # pre_command: shell scripting available
  # post_command: shell scripting available
utility:
  crane:
    <<: *defaults
    # Darwin and Linux
    os:
    # x86_64 and arm64
    arch:
      aarch64: arm64
    download: https://github.com/google/go-containerregistry/releases/download/v${version}/go-containerregistry_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  cyclonedx:
    <<: *defaults
    os:
      Linux: linux
      Darwin: osx
    arch:
      x86_64: x64
      aarch64: arm64
    download: https://github.com/CycloneDX/cyclonedx-cli/releases/download/v${version}/cyclonedx-${os}-${arch}
  docker-buildx:
    <<: *defaults
    download: https://github.com/docker/buildx/releases/download/v${version}/buildx-v${version}.${os}-${arch}
  docker-compose:
    <<: *defaults
    # x86_64 and aarch64 are the two supported architectures.
    arch:
      arm64: aarch64
    download: https://github.com/docker/compose/releases/download/v${version}/docker-compose-${os}-${arch}
  dumb-init:
    <<: *defaults
    # force default architecture x86_64 and aarch64
    arch:
    only: "[ ${os} = linux ]"
    download: https://github.com/Yelp/dumb-init/releases/download/v${version}/dumb-init_${version}_${arch}
  gh:
    <<: *defaults
    os:
      Linux: linux
      Darwin: macOS
    extension:
      default: tar.gz
      macOS: zip
    default_download_extract: |
      trap '[ ! -f /tmp/file.zip ] || rm -f /tmp/file.zip' EXIT
      if type -P curl; then
        curl -sSfL ${download} | ${extract}
      else
        wget -q -O - ${download} | ${extract}
      fi
    extract:
      macOS: |
        {
          cat > /tmp/file.zip
          unzip -o -j -d ${dest} /tmp/file.zip '*/bin/gh'
        }
      linux: tar -xzC ${dest}/ --no-same-owner --strip-components=2 gh_${version}_${os}_${arch}/bin/gh
    download: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${arch}.${extension}
  gimme:
    <<: *defaults
    download: https://github.com/travis-ci/gimme/archive/refs/tags/v${version}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner --strip-components=1 gimme-${version}/${utility}
  gitleaks:
    <<: *defaults
    arch:
      x86_64: x64
      aarch64: arm64
    download: https://github.com/gitleaks/gitleaks/releases/download/v${version}/gitleaks_${version}_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  goss:
    <<: *defaults
    os:
      Linux: linux
      Darwin: alpha-darwin
    # Mac OS is alpha and Mac only supports AMD64.  Linux supports arm and AMD64
    only: "[ ! ${os} = alpha-darwin ] || [ ${arch} = amd64 ]"
    download: https://github.com/goss-org/goss/releases/download/v${version}/goss-${os}-${arch}
  helm:
    <<: *defaults
    download: https://get.helm.sh/helm-v${version}-${os}-${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner --strip-components=1 ${os}-${arch}/helm
  jq:
    <<: *defaults
    only: "[ ${arch} = amd64 ]"
    os:
      Linux: linux64
      Darwin: osx-amd64
    download: https://github.com/jqlang/jq/releases/download/jq-${version}/jq-${os}
  kind:
    <<: *defaults
    download: https://github.com/kubernetes-sigs/kind/releases/download/v0.19.0/kind-${os}-${arch}
  kubeconform:
    <<: *defaults
    download: https://github.com/yannh/kubeconform/releases/download/v${version}/kubeconform-${os}-${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  kubectl:
    <<: *defaults
    download: https://dl.k8s.io/release/v${version}/bin/${os}/${arch}/kubectl
  kubeval:
    <<: *defaults
    only: "[ ${arch} = amd64 ]"
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
    download: https://github.com/instrumenta/kubeval/releases/download/v${version}/kubeval-${os}-${arch}.tar.gz
  kustomize:
    <<: *defaults
    download: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${version}/kustomize_v${version}_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  minikube:
    <<: *defaults
    download: https://github.com/kubernetes/minikube/releases/download/v${version}/minikube-${os}-${arch}
  rvm-installer:
    <<: *defaults
    download: https://github.com/rvm/rvm/archive/refs/tags/${version}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner --strip-components=2 rvm-${version}/binscripts/${utility}
    post_command: |
      if [ "${checksum_failed:-true}" = false ]; then
        exit
      fi
      # can be swapped out with a GitHub release proxy
      # escape forward slashes
      base='github.com\/rvm\/rvm'
      sed -i.bak -e 's/\( *\)DEFAULT_SOURCES=(github.com.*/\1DEFAULT_SOURCES=('"${base}"')/' "${dest}/${utility}"
      rm "${dest}/${utility}".bak
      sed -i.bak -e 's/archive\//archive\/refs\/tags\//g' "${dest}/${utility}"
      rm "${dest}/${utility}".bak
      if [ -z "${skip_checksum:-}" ]; then
        exit 6
      fi
  saml2aws:
    <<: *defaults
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
    download: https://github.com/Versent/saml2aws/releases/download/v${version}/saml2aws_${version}_${os}_${arch}.tar.gz
  yq:
    <<: *defaults
    download: https://github.com/mikefarah/yq/releases/download/v${version}/yq_${os}_${arch}
